<% layout("layout/page")%>
<% block("title", "Chat")%>

<!--<script src = "vendor/bower_components/socket.io-client/socket.io.js"></script> -->
<style>
    .btn-default {
        margin-top: 5px;
    }
    .log {
        padding-bottom: 5px;
        display:block;
        z-index: 5;
        overflow: auto;
        height: 350px;

        word-wrap: break-word;

    }
    @media screen and (max-width: 980px) {
        .log {
            height: 300px;
        }
    }
    @media screen and (max-width: 650px)
    {
        .log {
            height: 200px;
        }
    }
    @media screen and (max-width: 500px)
    {
        .log {
            height: 150px;
        }
    }

    .in {
        color: rgb(0, 0, 0);
    }
    .out {
        color: rgb(31, 181, 24);
    }
    .time {
        color: rgb(144, 144, 144);
        font: 0.8em 'Courier New';
    }
    .sys {
        color: rgb(165, 42, 42);
    }
    .user {
        color: rgb(25, 25, 112);
    }
</style>

<script src = "/socket.io/socket.io.js"></script>
<div id="room">
    <div class="form-group">
        <div class="well log" id="log">
        </div>
    </div>
    <form>
        <textarea class="form-control" rows="2" autocomplete="off" autofocus placeholder="Сообщение..." id="text"></textarea>
        <button onclick="sendMessage()" type="button" class="btn btn-default id="butSend">Отправить</button>
    </form>
</div>
<script>
    var socket = io.connect('', {
        reconnect: false,
        transports: [
                'websocket',
                'flashsocket',
                'htmlfile',
                'xhr-polling',
                'jsonp-polling'
            ]

    });

    var strings = {
        'connected': '[sys][time]%time%[/time]: Вы успешно соединились к сервером как [user]%name%[/user].[/sys]',
        'userJoined': '[sys][time]%time%[/time]: Пользователь [user]%name%[/user] присоединился к чату.[/sys]',
        'messageSent': '[out][time]%time%[/time]: [user]%name%[/user]: %text%[/out]',
        'messageReceived': '[in][time]%time%[/time]: [user]%name%[/user]: %text%[/in]',
        'userSplit': '[sys][time]%time%[/time]: Пользователь [user]%name%[/user] покинул чат.[/sys]'
    };

    var form = $("#room form");
    var ul = $("#room ul");
    var input = $("#text");
    var btn = $("#btnSend");

    function printMessage(msg) {
        $("<span>", {html:strings[msg.event].replace(/\[([a-z]+)\]/g, '<span class="$1">')
                .replace(/\[\/[a-z]+\]/g, '</span>').replace(/\%time\%/, msg.time).replace(/\%name\%/, msg.name)
                .replace(/\%text\%/, unescape(msg.text).replace('<', '&lt;').replace('>', '&gt;')) + '<br>'}).appendTo($("#log"));
        document.querySelector('#log').scrollTop = document.querySelector('#log').scrollHeight;
    }
    function sendMessage()
    {
        var text = escape(input.val());
        input.val("");
        socket.emit("message", text);
        return false;
    }
    function sendEnter(event) {
        if (event.which == '13') {
            event.preventDefault();
            sendMessage();
        }
    }


    socket.on("message", function(msg) {
                printMessage(msg);
            })
            .on("connect", function() {
                console.log("connect");
                input.bind("keypress", function(event) {sendEnter(event)});
                form.on("submit", sendMessage);
                btn.prop("disabled", false);
            })
            .on("disconnect", function() {
                console.log("disconnect");
                input.unbind("keypress", function(event) {sendEnter(event)});
                form.off("submit", sendMessage);
                btn.prop("disabled", true);
                setTimeout(reconnect, 500);
            })
            .on("logout", function() {
                location.href = "/";
            });
    function reconnect() {
        socket.once("error", function() {
            setTimeout(reconnect, 500);
        });
        socket.socket.connect();
    }

</script>